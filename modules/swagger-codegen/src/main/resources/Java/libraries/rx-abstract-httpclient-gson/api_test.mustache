package {{package}};

import {{invokerPackage}}.ApiClient;
import {{invokerPackage}}.HttpClient;

{{#generateDefaultHttpClient}}
import {{invokerPackage}}.OkHttpServiceClient;
{{/generateDefaultHttpClient}}

{{#imports}}import {{import}};
{{/imports}}
import org.junit.Before;
import org.junit.Test;
import org.junit.Assert;
import rx.Subscriber;
import rx.Observer;
import rx.Observable;

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
{{/fullJavaUtil}}

/**
 * API tests for {{classname}}
 */
public class {{classname}}Test {

    private {{classname}} api;
    private HttpClient httpClient;
    private ApiClient apiClient;

    @Before
    public void setup() {
        {{#generateDefaultHttpClient}}
        httpClient = new OkHttpServiceClient();
		{{/generateDefaultHttpClient}}
        {{^generateDefaultHttpClient}}
        httpClient = null;
		{{/generateDefaultHttpClient}}
        apiClient = new ApiClient(httpClient);
        api = new {{classname}}(apiClient);
    }

    {{#operations}}{{#operation}}
    /**
     * {{summary}}
     *
     * {{notes}}
     */
    @Test
    public void {{operationId}}Test() {
        {{#allParams}}
        {{{dataType}}} {{paramName}} = null;
        {{/allParams}}
        // rx.Observable<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}> apiObservable = api.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
        // Subscriber<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}> apiSubscriber = new Subscriber<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}}>() {
        //    @Override
        //    public void onNext({{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Object{{/returnType}} dtoResponse) {
        //        // TODO: test validations
        //        Assert.assertNotNull("DTO Response should not be Null", dtoResponse);
        //    }

        //    @Override
        //    public void onCompleted() {
        //       // TODO: test any post-processing
        //        System.out.println("Api Call Complete");
        //    }

        //    @Override
        //    public void onError(Throwable e) {
        //        // TODO: handle error scenario
        //        System.out.println(e.getMessage());
        //    }
        // };
        // apiObservable.subscribe(apiSubscriber);
    }
    {{/operation}}{{/operations}}
}
